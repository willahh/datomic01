<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="3ddce6fe-7950-460e-8f5a-dce0be37e0d2" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/dbnavigator.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__metosin_testit_0_4_0.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__net_cgrand_macrovich_0_2_1.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__nrepl_0_6_0.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__clojure_complete_0_2_4.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__clojure_complete_0_2_5.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_tools_nrepl_0_2_12.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/datomic01.iml" beforeDir="false" afterPath="$PROJECT_DIR$/datomic01.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project.clj" beforeDir="false" afterPath="$PROJECT_DIR$/project.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/datomic01/core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/datomic01/core.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/datomic01/database.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/datomic01/database.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/datomic01/model/user_dao.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/datomic01/model/user_dao.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/datomic01/model/user_schema.edn" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/test/datomic01/core_test.clj" beforeDir="false" afterPath="$PROJECT_DIR$/test/datomic01/core_test.clj" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectFrameBounds">
    <option name="y" value="23" />
    <option name="width" value="2560" />
    <option name="height" value="1417" />
  </component>
  <component name="ProjectId" id="1lr7HcW8p1VF3c60GlkvVBLQzrD" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1551445176051" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
  </component>
  <component name="ReplState" timestamp="1608347150682">{:repl-history {:ide [], :local [{:command &quot;(let [db (d/db conn)]\n  (d/q '[:find ?e\n         :where\n         [?e :person/email]]\n       db))&quot;, :offset 96, :ns &quot;datomic01.core&quot;} {:command &quot;(d/q '[:find ?e\n       :where\n       [?e :suburb/name]]\n     db)&quot;, :offset 64, :ns &quot;datomic01.core&quot;} {:command &quot;(d/q '[:find ?e\n       :where\n       [?e :suburb/name]] db)&quot;, :offset 59, :ns &quot;datomic01.core&quot;} {:command &quot;(def schema\n  [{:db/id #db/id[:db.part/db]\n    :db/ident :suburb/name\n    :db/valueType :db.type/string\n    :db/cardinality :db.cardinality/one\n    :db/doc \&quot;The name of the suburb\&quot;\n    :db.install/_attribute :db.part/db}\n   \n   {:db/id #db/id[:db.part/db]\n    :db/ident :suburb/city\n    :db/valueType :db.type/string\n    :db/cardinality :db.cardinality/one\n    :db/doc \&quot;The name of the city the suburb is located in\&quot;\n    :db.install/_attribute :db.part/db}\n   \n   {:db/id #db/id[:db.part/db]\n    :db/ident :city/province\n    :db/valueType :db.type/ref\n    :db/cardinality :db.cardinality/one\n    :db/doc \&quot;The name of the province in which the city is located\&quot;\n    :db.install/_attribute :db.part/db}\n\n   {:db/id #db/id[:db.part/db]\n    :db/ident :province/name\n    :db/valueType :db.type/string\n    :db/cardinality :db.cardinality/one\n    :db/doc \&quot;The name of the province in which the city is located\&quot;\n    :db.install/_attribute :db.part/db}])&quot;, :offset 944, :ns &quot;datomic01.core&quot;} {:command &quot;(d/transact conn schema)&quot;, :offset 24, :ns &quot;datomic01.core&quot;} {:command &quot;(def add-suburbs\n  [{:db/id #db/id [:db.part/suburb -1000076]   :suburb/name \&quot;Bellville\&quot; :suburb/city \&quot;Cape Town\&quot; :province/name \&quot;Western Cape\&quot;}\n   {:db/id #db/id [:db.part/suburb -1000089] :suburb/name \&quot;Athlone\&quot; :suburb/city \&quot;Cape Town\&quot; :province/name \&quot;Western Cape\&quot;}\n   {:db/id (d/tempid :db.part/suburb) :suburb/name \&quot;Rondebosch\&quot; :suburb/city \&quot;Cape Town\&quot; :province/name \&quot;Western Cape\&quot;}])&quot;, :offset 390, :ns &quot;datomic01.core&quot;} {:command &quot;(def add-suburbs\n  [{:suburb/name \&quot;Bellville\&quot; :suburb/city \&quot;Cape Town\&quot; :province/name \&quot;Western Cape\&quot;}\n   {:suburb/name \&quot;Athlone\&quot; :suburb/city \&quot;Cape Town\&quot; :province/name \&quot;Western Cape\&quot;}\n   {:suburb/name \&quot;Rondebosch\&quot; :suburb/city \&quot;Cape Town\&quot; :province/name} \&quot;Western Cape\&quot;])&quot;, :offset 272, :ns &quot;datomic01.core&quot;} {:command &quot;(def add-suburbs\n  [{:suburb/name \&quot;Bellville\&quot; :suburb/city \&quot;Cape Town\&quot; :province/name \&quot;Western Cape\&quot;}\n   {:suburb/name \&quot;Athlone\&quot; :suburb/city \&quot;Cape Town\&quot; :province/name \&quot;Western Cape\&quot;}\n   {:suburb/name \&quot;Rondebosch\&quot; :suburb/city \&quot;Cape Town\&quot; :province/name \&quot;Western Cape\&quot;}])&quot;, :offset 272, :ns &quot;datomic01.core&quot;} {:command &quot;(d/transact conn add-suburbs)&quot;, :offset 29, :ns &quot;datomic01.core&quot;} {:command &quot;(let [db (d/db conn)]\n  (d/q '[:find ?e\n        :where\n        [?e :suburb/name]] db))&quot;, :offset 86, :ns &quot;datomic01.core&quot;} {:command &quot;(slurp \&quot;resources/data/user.edn\&quot;)&quot;, :offset 33, :ns &quot;datomic01.core&quot;} {:command &quot;(edn/read-string (slurp \&quot;resources/data/user.edn\&quot;))(edn/read-string (slurp \&quot;resources/user_schema.edn\&quot;))&quot;, :offset 104, :ns &quot;datomic01.core&quot;} {:command &quot;(slurp \&quot;resources/user_schema.edn\&quot;)&quot;, :offset 35, :ns &quot;datomic01.core&quot;} {:command &quot;]&quot;, :offset 1} {:command &quot;(edn/read-string (slurp \&quot;resources/data/user.edn\&quot;))&quot;, :offset 51, :ns &quot;datomic01.core&quot;} {:command &quot;(d/transact conn (edn/read-string (slurp \&quot;resources/user_schema.edn\&quot;)))&quot;, :offset 71, :ns &quot;datomic01.core&quot;} {:command &quot;(d/transact conn (edn/read-string (slurp \&quot;resources/data/user.edn\&quot;)))&quot;, :offset 69, :ns &quot;datomic01.core&quot;} {:command &quot;(let [db (d/db conn)]\n  (d/q '[:find ?e\n        :where\n        [?e :user/first-name]] db))&quot;, :offset 90, :ns &quot;datomic01.core&quot;} {:command &quot;(ns datomic01.core\n  (:require [datomic.api :as d]\n            [clojure.edn :as edn]))&quot;, :offset 86, :ns &quot;datomic01.core&quot;} {:command &quot;(def uri \&quot;datomic:free://localhost:4334/example\&quot;)&quot;, :offset 49, :ns &quot;datomic01.core&quot;} {:command &quot;(d/create-database uri)&quot;, :offset 23, :ns &quot;datomic01.core&quot;} {:command &quot;(def conn (d/connect uri))&quot;, :offset 26, :ns &quot;datomic01.core&quot;} {:command &quot;(let [db (d/db conn)]\n  (d/q '[:find ?e\n         :where\n         [?e :user/first-name]] db))&quot;, :offset 92, :ns &quot;datomic01.core&quot;} {:command &quot;(def db (d/db conn))&quot;, :offset 20, :ns &quot;datomic01.core&quot;} {:command &quot;(def user-1 (d/entity db 17592186045425))&quot;, :offset 41, :ns &quot;datomic01.core&quot;} {:command &quot;(let [db (d/entity-db user-1)]\n  (d/q '[:find ?e\n         :where\n         [?e :user/id]]\n       db))&quot;, :offset 100, :ns &quot;datomic01.core&quot;} {:command &quot;(edn/read-string (slurp \&quot;resources/user_schema.edn\&quot;))&quot;, :offset 53, :ns &quot;datomic01.core&quot;} {:command &quot;(let [db (d/db conn)]\n    (d/q '[:find ?e\n           :where\n           [?e :user/first-name]] db))&quot;, :offset 98, :ns &quot;datomic01.core&quot;} {:command &quot;(d/q '[:find ?e\n         :where\n         [?e :user/first-name]] db)&quot;, :offset 67, :ns &quot;datomic01.core&quot;} {:command &quot;(let [db (d/entity-db user-1)]\n    (d/q '[:find ?e\n           :where\n           [?e :user/id]]\n         db))&quot;, :offset 108, :ns &quot;datomic01.core&quot;} {:command &quot;(find-list)&quot;, :offset 11, :ns &quot;datomic01.model.user-dao&quot;} {:command &quot;(ns datomic01.database\n  (:require [datomic.api :as d]))&quot;, :offset 56, :ns &quot;datomic01.core&quot;}], :remote []}}</component>
  <component name="RunManager">
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="NREPL" />
      <setting name="configType" value="SPECIFY" />
      <setting name="replPortFileType" value="STANDARD" />
      <setting name="customPortFile" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="nrepl" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="datomic01" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3ddce6fe-7950-460e-8f5a-dce0be37e0d2" name="Default Changelist" comment="" />
      <created>1551443217113</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1551443217113</updated>
    </task>
    <servers />
  </component>
</project>