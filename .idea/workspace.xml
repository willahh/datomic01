<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="8c1ef57c-5aeb-480c-bca5-7c4e7109db4c" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__mount_0_1_16.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/dev/user.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/scripts/add_schemas_and_data.clj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/backend/src/datomic01/backend/db/datomic.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/.nrepl-port" beforeDir="false" afterPath="$PROJECT_DIR$/backend/.nrepl-port" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/datomic01.iml" beforeDir="false" afterPath="$PROJECT_DIR$/backend/datomic01.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/project.clj" beforeDir="false" afterPath="$PROJECT_DIR$/backend/project.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/src/datomic01/backend/core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/datomic01/backend/core.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/src/datomic01/backend/database.clj" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/datomic01/backend/db/utils.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/src/datomic01/backend/db/user.clj" beforeDir="false" afterPath="$PROJECT_DIR$/backend/src/datomic01/backend/db/user.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/target/repl-port" beforeDir="false" afterPath="$PROJECT_DIR$/backend/target/repl-port" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/backend/target/stale/leiningen.core.classpath.extract-native-dependencies" beforeDir="false" afterPath="$PROJECT_DIR$/backend/target/stale/leiningen.core.classpath.extract-native-dependencies" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DepsLocalSettings">
    <option name="repoId" value="" />
    <option name="repoUrl" value="" />
    <option name="projectSyncType">
      <map>
        <entry key="$PROJECT_DIR$/../../refonte" value="PREVIEW" />
      </map>
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHome" value="$APPLICATION_HOME_DIR$/plugins/maven/lib/maven3" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectId" id="1lrGYaWRPuiDnGp6DxI8t5szH6S" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="TF_FMT" value="false" />
    <property name="cursive.last.file.extension./Users/wravel/project/perso/datomic01/backend/src" value="clj" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/backend/src/datomic01/backend/db" />
    <property name="project.structure.last.edited" value="Problems" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.2" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/backend/src/datomic01/backend/db" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/backend/src/datomic01/backend/db" />
      <recent name="$PROJECT_DIR$/backend/src/datomic01/backend" />
    </key>
  </component>
  <component name="ReplState" timestamp="1608353543348">{:repl-history {:ide [], :local [{:command &quot;(ns datomic01.backend.database\n  (:require [datomic.api :as d]))&quot;, :offset 64, :ns &quot;datomic01.core&quot;} {:command &quot;(ns datomic01.backend.core\n  (:require [datomic.api :as d]\n            [clojure.edn :as edn]))&quot;, :offset 94, :ns &quot;datomic01.backend.database&quot;} {:command &quot;(do\n    (connect)\n    (def db (d/db conn))\n    (def user-1 (d/entity db 17592186045425))\n    )&quot;, :offset 94, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(ns datomic01.backend.db.user\n  (:require [datomic.api :as d]\n            [datomic01.backend.database :as database]\n            [datomic01.backend.model.user-model :as user-model]))&quot;, :offset 181, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(defn find-list\n  ([]\n   (find-list '[:where [?e :user/id]]))\n  ([where]\n   (database/find-where user-model/fields where))\n  ([where &amp; {:keys [offset limit order asc]}]\n   (database/find-where user-model/fields where\n                        :offset offset\n                        :limit limit\n                        :order order\n                        :asc asc)))&quot;, :offset 365, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(defprotocol UserProtocol\n  (find-user-by-id \n    [repo user-id]\n    \&quot;Récupère un utilisateur par user-id\&quot;))&quot;, :offset 108, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(find-user-by-id UserRepository 1)&quot;, :offset 34, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(defrecord UserRepository\n  [pool]\n  UserProtocol\n  (UserProtocol/find-user-by-id\n    [_ user-id]\n    (find-list '[:where [?e :user/id]])))&quot;, :offset 139, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(defrecord UserRepository\n  [pool]\n  UserProtocol\n  (find-user-by-id\n    [_ user-id]\n    (find-list '[:where [?e :user/id]])))&quot;, :offset 126, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(find-user-by-id nil 1)&quot;, :offset 23, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(defrecord UserRepository\n  [pool]\n  UserProtocol\n  (find-user-by-id\n    [_ user-id]\n    \&quot;a\&quot;\n    #_(find-list '[:where [?e :user/id]])))&quot;, :offset 136, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(def user-repo (-&gt;UserRepository nil))&quot;, :offset 38, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;uri&quot;, :offset 3, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(ns datomic01.backend.core\n  (:require [datomic.api :as d]\n            [clojure.edn :as edn]\n            [mount.core :as mount]))&quot;, :offset 129, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(ns datomic01.backend.db.user\n  (:require [datomic.api :as d]\n            [mount.core :as mount]\n            [datomic01.backend.database :as database]\n            [datomic01.backend.model.user-model :as user-model]))&quot;, :offset 216, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(ns user\n  (:require [mount.core :as mount]))&quot;, :offset 45, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(mount/start)&quot;, :offset 13, :ns &quot;user&quot;} {:command &quot;(defn go []\n  (start)\n  :ready)&quot;, :offset 31, :ns &quot;user&quot;} {:command &quot;(defn go []\n  (mount/start)\n  :ready)&quot;, :offset 37, :ns &quot;user&quot;} {:command &quot;(ns user\n  (:require [mount.core :as mount]\n            [clojure.tools.namespace.repl :as tnr]))&quot;, :offset 96, :ns &quot;user&quot;} {:command &quot;user-repo&quot;, :offset 9, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(reset)&quot;, :offset 7, :ns &quot;user&quot;} {:command &quot;(mount/stop)&quot;, :offset 12, :ns &quot;user&quot;} {:command &quot;(ns datomic01.backend.db.datomic\n  (:require [mount.core :as mount]))&quot;, :offset 69, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(ns datomic01.backend.db.datomic\n  (:require [datomic.api :as d]\n            [mount.core :as mount]))&quot;, :offset 101, :ns &quot;datomic01.backend.db.datomic&quot;} {:command &quot;(mount/defstate datomic\n          :start (do\n                   (def uri \&quot;datomic:free://localhost:4334/example\&quot;)\n                   (d/create-database uri)\n                   (def conn (d/connect uri)))\n          :stop (fn [] (prn \&quot;TODO: Stop datomic connection pool\&quot;)))&quot;, :offset 271, :ns &quot;datomic01.backend.db.datomic&quot;} {:command &quot;datomic&quot;, :offset 7, :ns &quot;datomic01.backend.db.datomic&quot;} {:command &quot;(ns datomic01.backend.core\n  (:require [datomic.api :as d]\n            [clojure.edn :as edn]\n            [datomic01.backend.db.datomic :as datomic]))&quot;, :offset 149, :ns &quot;datomic01.backend.db.datomic&quot;} {:command &quot;(mount/defstate datomic-conn\n          :start (do\n                   (def uri \&quot;datomic:free://localhost:4334/example\&quot;)\n                   (d/create-database uri)\n                   (def conn (d/connect uri)))\n          :stop (fn [] (prn \&quot;TODO: Stop datomic connection pool\&quot;)))&quot;, :offset 276, :ns &quot;datomic01.backend.db.datomic&quot;} {:command &quot;(mount/defstate conn\n          :start (do\n                   (def uri \&quot;datomic:free://localhost:4334/example\&quot;)\n                   (d/create-database uri)\n                   (def conn (d/connect uri)))\n          :stop (fn [] (prn \&quot;TODO: Stop datomic connection pool\&quot;)))&quot;, :offset 268, :ns &quot;datomic01.backend.db.datomic&quot;} {:command &quot;(d/db datomic/conn)&quot;, :offset 19, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(mount/defstate conn\n          :start (do\n                   (def uri \&quot;datomic:free://localhost:4334/example\&quot;)\n                   (d/create-database uri)\n                   (d/connect uri))\n          :stop (fn [] (prn \&quot;TODO: Stop datomic connection pool\&quot;)))&quot;, :offset 257, :ns &quot;datomic01.backend.db.datomic&quot;} {:command &quot;datomic/conn&quot;, :offset 12, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(def db (d/db datomic/conn))&quot;, :offset 28, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(do\n    (def db (d/db datomic/conn))\n    (def user-1 (d/entity db 17592186045425)))&quot;, :offset 83, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(d/q '[:find ?e\n         :where\n         [?e :user/first-name]] db)&quot;, :offset 67, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(ns datomic01.backend.database\n  (:require [datomic01.backend.db.datomic :as datomic]))&quot;, :offset 87, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(ns datomic01.backend.database\n  (:require [datomic.api :as d]\n            [datomic01.backend.db.datomic :as datomic]))&quot;, :offset 119, :ns &quot;datomic01.backend.database&quot;} {:command &quot;(ns datomic01.backend.db.user\n  (:require [datomic.api :as d]\n            [mount.core :as mount]\n            [datomic01.backend.db.datomic :as datomic]\n            [datomic01.backend.model.user-model :as user-model]))&quot;, :offset 217, :ns &quot;datomic01.backend.database&quot;} {:command &quot;(ns datomic01.backend.db.user\n  (:require [datomic.api :as d]\n            [mount.core :as mount]\n            [datomic01.backend.db.utils :as db-utils]\n            [datomic01.backend.model.user-model :as user-model]))&quot;, :offset 216, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(ns datomic01.backend.db.utils\n  (:require [datomic.api :as d]\n            [datomic01.backend.db.datomic :as datomic]\n            [mount.core :as mount]))&quot;, :offset 154, :ns &quot;datomic01.backend.core&quot;} {:command &quot;(defn get-db []\n  (d/db datomic/conn))&quot;, :offset 38, :ns &quot;datomic01.backend.db.utils&quot;} {:command &quot;(go)&quot;, :offset 4, :ns &quot;user&quot;} {:command &quot;(find-user-by-id user-repo 1)&quot;, :offset 29, :ns &quot;datomic01.backend.db.user&quot;} {:command &quot;(ns add-schemas-and-data)&quot;, :offset 25, :ns &quot;datomic01.backend.db.utils&quot;} {:command &quot;(ns datomic01.backend.core)&quot;, :offset 27, :ns &quot;add-schemas-and-data&quot;}], :remote []}}</component>
  <component name="RunManager">
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="replPortFileType" value="STANDARD" />
      <setting name="customPortFile" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="repl" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="datomic01" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$/backend" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8c1ef57c-5aeb-480c-bca5-7c4e7109db4c" name="Default Changelist" comment="" />
      <created>1608347846765</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1608347846765</updated>
    </task>
    <task id="LOCAL-00001" summary="Update">
      <created>1608350651364</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1608350651364</updated>
    </task>
    <task id="LOCAL-00002" summary="Update">
      <created>1608350662030</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1608350662030</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Update" />
    <option name="LAST_COMMIT_MESSAGE" value="Update" />
  </component>
  <component name="WindowStateProjectService">
    <state x="304" y="198" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1608347907841">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="304" y="198" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.23.1680.1027@0.23.1680.1027" timestamp="1608347907841" />
    <state x="553" y="345" key="#com.intellij.fileTypes.FileTypeChooser" timestamp="1608349579358">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="553" y="345" key="#com.intellij.fileTypes.FileTypeChooser/0.23.1680.1027@0.23.1680.1027" timestamp="1608349579358" />
    <state x="491" y="468" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog" timestamp="1608348733907">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="491" y="468" key="#com.intellij.refactoring.move.MoveHandler.SelectRefactoringDialog/0.23.1680.1027@0.23.1680.1027" timestamp="1608348733907" />
    <state x="273" y="114" key="CommitChangelistDialog2" timestamp="1608350661904">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="273" y="114" key="CommitChangelistDialog2/0.23.1680.1027@0.23.1680.1027" timestamp="1608350661904" />
    <state x="495" y="158" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser" timestamp="1608351798961">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="495" y="158" key="com.intellij.openapi.editor.actions.MultiplePasteAction$ClipboardContentChooser/0.23.1680.1027@0.23.1680.1027" timestamp="1608351798961" />
    <state x="532" y="291" width="705" height="490" key="find.popup" timestamp="1608352969223">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="532" y="291" width="705" height="490" key="find.popup/0.23.1680.1027@0.23.1680.1027" timestamp="1608352969223" />
    <state x="470" y="222" key="new project wizard" timestamp="1608351687972">
      <screen x="0" y="23" width="1680" height="1027" />
    </state>
    <state x="470" y="222" key="new project wizard/0.23.1680.1027@0.23.1680.1027" timestamp="1608351687972" />
  </component>
</project>